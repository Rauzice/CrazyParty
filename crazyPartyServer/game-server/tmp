Type.registerNamespace('StuSite.Han');
StuSite.Han.ServiceBooking = function() {
        StuSite.Han.ServiceBooking.initializeBase(this);
            this._timeout = 0;
                this._userContext = null;
                    this._succeeded = null;
                        this._failed = null;
}
StuSite.Han.ServiceBooking.prototype = {
        _get_path: function() {
                               var p = this.get_path();
                                       if (p) return p;
                                               else return StuSite.Han.ServiceBooking._staticInstance.get_path();
                                                   },
                       GetCars: function(yyrq, yysd, xllxID, pageSize, pageNum, succeededCallback, failedCallback, userContext) {
                                            /// <param name="yyrq" type="String">System.String</param>
                                            /// <param name="yysd" type="String">System.String</param>
                                            /// <param name="xllxID" type="String">System.String</param>
                                            /// <param name="pageSize" type="Number">System.Int32</param>
                                            /// <param name="pageNum" type="Number">System.Int32</param>
                                            /// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
                                            /// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
                                            /// <param name="userContext" optional="true" mayBeNull="true"></param>
                                            return this._invoke(this._get_path(), 'GetCars', false, {
                                                                yyrq: yyrq,
                                                                            yysd: yysd,
                                                                                        xllxID: xllxID,
                                                                                                    pageSize: pageSize,
                                                                                                                pageNum: pageNum
                                                                                                                        },
                                                                                                                                succeededCallback, failedCallback, userContext);
                                                },
                                    BookingCar: function(yyrq, xnsd, cnbh, imgCode, KMID, succeededCallback, failedCallback, userContext) {
                                                            /// <param name="yyrq" type="String">System.String</param>
                                                            /// <param name="xnsd" type="String">System.String</param>
                                                            /// <param name="cnbh" type="String">System.String</param>
                                                            /// <param name="imgCode" type="String">System.String</param>
                                                            /// <param name="KMID" type="String">System.String</param>
                                                            /// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
                                                            /// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
                                                            /// <param name="userContext" optional="true" mayBeNull="true"></param>
                                                            return this._invoke(this._get_path(), 'BookingCar', false, {
                                                                                yyrq: yyrq,
                                                                                            xnsd: xnsd,
                                                                                                        cnbh: cnbh,
                                                                                                                    imgCode: imgCode,
                                                                                                                                KMID: KMID
                                                                                                                                        },
                                                                                                                                                succeededCallback, failedCallback, userContext);
                                                                }
}
StuSite.Han.ServiceBooking.registerClass('StuSite.Han.ServiceBooking', Sys.Net.WebServiceProxy);
StuSite.Han.ServiceBooking._staticInstance = new StuSite.Han.ServiceBooking();
StuSite.Han.ServiceBooking.set_path = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_path(value);
}
StuSite.Han.ServiceBooking.get_path = function() {
        /// <value type="String" mayBeNull="true">The service url.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_path();
}
StuSite.Han.ServiceBooking.set_timeout = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_timeout(value);
}
StuSite.Han.ServiceBooking.get_timeout = function() {
        /// <value type="Number">The service timeout.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_timeout();
}
StuSite.Han.ServiceBooking.set_defaultUserContext = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_defaultUserContext(value);
}
StuSite.Han.ServiceBooking.get_defaultUserContext = function() {
        /// <value mayBeNull="true">The service default user context.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_defaultUserContext();
}
StuSite.Han.ServiceBooking.set_defaultSucceededCallback = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_defaultSucceededCallback(value);
}
StuSite.Han.ServiceBooking.get_defaultSucceededCallback = function() {
        /// <value type="Function" mayBeNull="true">The service default succeeded callback.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_defaultSucceededCallback();
}
StuSite.Han.ServiceBooking.set_defaultFailedCallback = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_defaultFailedCallback(value);
}
StuSite.Han.ServiceBooking.get_defaultFailedCallback = function() {
        /// <value type="Function" mayBeNull="true">The service default failed callback.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_defaultFailedCallback();
}
StuSite.Han.ServiceBooking.set_enableJsonp = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_enableJsonp(value);
}
StuSite.Han.ServiceBooking.get_enableJsonp = function() {
        /// <value type="Boolean">Specifies whether the service supports JSONP for cross domain calling.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_enableJsonp();
}
StuSite.Han.ServiceBooking.set_jsonpCallbackParameter = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_jsonpCallbackParameter(value);
}
StuSite.Han.ServiceBooking.get_jsonpCallbackParameter = function() {
        /// <value type="String">Specifies the parameter name that contains the callback function name for a JSONP request.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_jsonpCallbackParameter();
}
StuSite.Han.ServiceBooking.set_path("/Han/ServiceBooking.asmx");
StuSite.Han.ServiceBooking.GetCars = function(yyrq, yysd, xllxID, pageSize, pageNum, onSuccess, onFailed, userContext) {
        /// <param name="yyrq" type="String">System.String</param>
        /// <param name="yysd" type="String">System.String</param>
        /// <param name="xllxID" type="String">System.String</param>
        /// <param name="pageSize" type="Number">System.Int32</param>
        /// <param name="pageNum" type="Number">System.Int32</param>
        /// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="userContext" optional="true" mayBeNull="true"></param>
        StuSite.Han.ServiceBooking._staticInstance.GetCars(yyrq, yysd, xllxID, pageSize, pageNum, onSuccess, onFailed, userContext);
}
StuSite.Han.ServiceBooking.BookingCar = function(yyrq, xnsd, cnbh, imgCode, KMID, onSuccess, onFailed, userContext) {
        /// <param name="yyrq" type="String">System.String</param>
        /// <param name="xnsd" type="String">System.String</param>
        /// <param name="cnbh" type="String">System.String</param>
        /// <param name="imgCode" type="String">System.String</param>
        /// <param name="KMID" type="String">System.String</param>
        /// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="userContext" optional="true" mayBeNull="true"></param>
        StuSite.Han.ServiceBooking._staticInstance.BookingCar(yyrq, xnsd, cnbh, imgCode, KMID, onSuccess, onFailed, userContext);
}Type.registerNamespace('StuSite.Han');
StuSite.Han.ServiceBooking = function() {
        StuSite.Han.ServiceBooking.initializeBase(this);
            this._timeout = 0;
                this._userContext = null;
                    this._succeeded = null;
                        this._failed = null;
}
StuSite.Han.ServiceBooking.prototype = {
        _get_path: function() {
                               var p = this.get_path();
                                       if (p) return p;
                                               else return StuSite.Han.ServiceBooking._staticInstance.get_path();
                                                   },
                       GetCars: function(yyrq, yysd, xllxID, pageSize, pageNum, succeededCallback, failedCallback, userContext) {
                                            /// <param name="yyrq" type="String">System.String</param>
                                            /// <param name="yysd" type="String">System.String</param>
                                            /// <param name="xllxID" type="String">System.String</param>
                                            /// <param name="pageSize" type="Number">System.Int StuSite.Han.ServiceBooking._staticInstance.BookingCar(yyrq, xnsd, cnbh, iargCar(yyrq, xnsd, cnbh, imgCode, KMID, onSuccess,tytuSite.Han.ServiceBooking = function() {
                                        StuSite.Han.ServiceBooking.initializeBase(this);
                                            this._timeout  oializeBase(this);
                                                this._timeout = 0;
                                                    this._userContext = null;
                                                       ex_userContext = null;
                                                           this._succeeded = null;     return this._invoke(this._get_path(), 'GetCars', false, {
                                                                               yyrq: yyrq,
                                                                                           yysd: yysd,
                                                                                                p) return p;
                                                                   else return StuSite.Han.ServiceBooking._staticInstanc: pageNum
                                                                               },
                                                                       succeededCallback, failedCallback, userContext);
                                                               },
                                    BookingCar: function(yyrq, xnsd, cnbh, imgCode, KMID, succeededCallback, faile="String">System.String</param>
                                                                /// <param name="yysd" type="Stristem.String</param>
                                                                /// <param name="xnsd" type="String">System.String</param>
                                                                /// <param name="cnbh" type="String">System.String</param>
                                                                /// <param name="imgCode" type="String">System.String</param>
                                                                /// <param name="KMID" type="String">System.String</param>
                                                                /// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
                                                                /// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
                                                                /// <param name="userContext" optional="true" mayBeNull="true"></param>
                                                                return this._invoke(this._get_path(), 'BookingCar', false, {
                                                                                yyrq: yyrq,
                                                                                            xnsd: xnsd,
                                                                                                        cnbh: cnbh,
                                                                                                                    imgCode: imgCode,
                                                                                                                                KMID: KMID
                                                                                                                                        },
                                                                                                                                                succeededCallback, failedCallback, userContext);
                                                                    }
                                                                    }
                                                                    StuSite.Han.ServiceBooking.registerClass('StuSite.Han.ServiceBooking', Sys.Net.WebServiceProxy);
                                                                    StuSite.Han.ServiceBooking._staticInstance = new StuSite.Han.ServiceBooking();
                                    StuSite.Han.ServiceBooking.set_path = function(value) {
                                            StuSite.Han.ServiceBooking._staticInstance.set_path(value);
                                    }
StuSite.Han.ServiceBooking.get_path = function() {
        /// <value type="String" mayBeNull="true">The service url.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_path();
}
StuSite.Han.ServiceBooking.set_timeout = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_timeout(value);
}
StuSite.Han.ServiceBooking.get_timeout = function() {
        /// <value type="Number">The service timeout.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_timeout();
}
StuSite.Han.ServiceBooking.set_defaultUserContext = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_defaultUserContext(value);
}
StuSite.Han.ServiceBooking.get_defaultUserContext = function() {
        /// <value mayBeNull="true">The service default user context.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_defaultUserContext();
}
StuSite.Han.ServiceBooking.set_defaultSucceededCallback = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_defaultSucceededCallback(value);
}
StuSite.Han.ServiceBooking.get_defaultSucceededCallback = function() {
        /// <value type="Function" mayBeNull="true">The service default succeeded callback.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_defaultSucceededCallback();
}
StuSite.Han.ServiceBooking.set_defaultFailedCallback = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_defaultFailedCallback(value);
}
StuSite.Han.ServiceBooking.get_defaultFailedCallback = function() {
        /// <value type="Function" mayBeNull="true">The service default failed callback.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_defaultFailedCallback();
}
StuSite.Han.ServiceBooking.set_enableJsonp = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_enableJsonp(value);
}
StuSite.Han.ServiceBooking.get_enableJsonp = function() {
        /// <value type="Boolean">Specifies whether the service supports JSONP for cross domain calling.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_enableJsonp();
}
StuSite.Han.ServiceBooking.set_jsonpCallbackParameter = function(value) {
        StuSite.Han.ServiceBooking._staticInstance.set_jsonpCallbackParameter(value);
}
StuSite.Han.ServiceBooking.get_jsonpCallbackParameter = function() {
        /// <value type="String">Specifies the parameter name that contains the callback function name for a JSONP request.</value>
        return StuSite.Han.ServiceBooking._staticInstance.get_jsonpCallbackParameter();
}
Stue>
    return StuSite.Han.ServiceBooking._staticInstance.get_defaultFailedCallback();
    }
StuSite.Han.ServiceBookq, yysd, xllxID, pageSize, pageNum, onSuccess, onFailed, userContext) {
        /// <param name="yyrq" type="String">System.String</param>
        /// <param name="yysd" type="String">System.String</param>
        /// <param name="xllxID" type="String">System.String</param>
        /// <param name="pageSize" type="Number">System.Int32</param>
        /// <param name="pageNum" type="Number">System.Int32</param>
        /// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="userContext" optional="true" mayBeNull="true"></param>
        StuSite.Han.ServiceBooking._staticInstance.GetCars(yyrq, yysd, xllxID, pageSize, pageNum, onSuccess, onFailed, userContext);
}
StuSite.Han.ServiceBooking.BookingCar = function(yyrq, xnsd, cnbh, imgCode, KMID, onSuccess, onFailed, userContext) {
        /// <param name="yyrq" type="String">System.String</param>
        /// <param name="xnsd" type="String">System.String</param>
        /// <param name="cnbh" type="String">System.String</param>
        /// <param name="imgCode" type="String">System.String</param>
        /// <param name="KMID" type="String">System.String</param>
        /// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
        /// <param name="userContext" optional="true" mayBeNull="true"></param>
        StuSite.Han.ServiceBooking._staticInstance.BookingCar(yyrq, xnsd, cnbh, imgCode, KMID, onSuccess, onFailed, userContext);
}
